/**
 * amis-ui v2.7.2
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var React = require('react');
var amisCore = require('amis-core');
var PopUp = require('./PopUp.js');
var ReactDOM = require('react-dom');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var PopOverContainer = /** @class */ (function (_super) {
    tslib.__extends(PopOverContainer, _super);
    function PopOverContainer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isOpened: false
        };
        return _this;
    }
    PopOverContainer.prototype.targetRef = function (target) {
        this.target = target ? ReactDOM.findDOMNode(target) : null;
    };
    PopOverContainer.prototype.handleClick = function () {
        this.setState({
            isOpened: true
        });
    };
    PopOverContainer.prototype.close = function () {
        var _a = this.props, onBeforeHide = _a.onBeforeHide, onAfterHide = _a.onAfterHide;
        if (onBeforeHide && typeof onBeforeHide === 'function') {
            onBeforeHide === null || onBeforeHide === void 0 ? void 0 : onBeforeHide();
        }
        this.setState({
            isOpened: false
        });
        if (onAfterHide && typeof onAfterHide === 'function') {
            onAfterHide === null || onAfterHide === void 0 ? void 0 : onAfterHide();
        }
    };
    PopOverContainer.prototype.getTarget = function () {
        return this.target || ReactDOM.findDOMNode(this);
    };
    PopOverContainer.prototype.getParent = function () {
        var _a;
        return (_a = this.getTarget()) === null || _a === void 0 ? void 0 : _a.parentElement;
    };
    PopOverContainer.prototype.render = function () {
        var _a = this.props, useMobileUI = _a.useMobileUI, children = _a.children, popOverContainer = _a.popOverContainer, popOverClassName = _a.popOverClassName, dropdownRender = _a.popOverRender, placement = _a.placement;
        var mobileUI = useMobileUI && amisCore.isMobile();
        return (React__default["default"].createElement(React__default["default"].Fragment, null,
            children({
                isOpened: this.state.isOpened,
                onClick: this.handleClick,
                ref: this.targetRef
            }),
            mobileUI ? (React__default["default"].createElement(PopUp["default"], { isShow: this.state.isOpened, container: popOverContainer, className: popOverClassName, onHide: this.close }, dropdownRender({ onClose: this.close }))) : (React__default["default"].createElement(amisCore.Overlay, { container: popOverContainer || this.getParent, target: this.getTarget, placement: placement || 'auto', show: this.state.isOpened },
                React__default["default"].createElement(amisCore.PopOver, { overlay: true, className: popOverClassName, style: {
                        minWidth: this.target
                            ? Math.max(this.target.offsetWidth, 100)
                            : 'auto'
                    }, onHide: this.close }, dropdownRender({ onClose: this.close }))))));
    };
    tslib.__decorate([
        amisCore.autobind,
        tslib.__metadata("design:type", Function),
        tslib.__metadata("design:paramtypes", [Object]),
        tslib.__metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "targetRef", null);
    tslib.__decorate([
        amisCore.autobind,
        tslib.__metadata("design:type", Function),
        tslib.__metadata("design:paramtypes", []),
        tslib.__metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "handleClick", null);
    tslib.__decorate([
        amisCore.autobind,
        tslib.__metadata("design:type", Function),
        tslib.__metadata("design:paramtypes", []),
        tslib.__metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "close", null);
    tslib.__decorate([
        amisCore.autobind,
        tslib.__metadata("design:type", Function),
        tslib.__metadata("design:paramtypes", []),
        tslib.__metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "getTarget", null);
    tslib.__decorate([
        amisCore.autobind,
        tslib.__metadata("design:type", Function),
        tslib.__metadata("design:paramtypes", []),
        tslib.__metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "getParent", null);
    return PopOverContainer;
}(React__default["default"].Component));

exports.PopOverContainer = PopOverContainer;
exports["default"] = PopOverContainer;
