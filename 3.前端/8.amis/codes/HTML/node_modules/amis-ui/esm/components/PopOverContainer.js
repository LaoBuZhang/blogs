/**
 * amis-ui v2.7.2
 * Copyright 2018-2023 fex
 */

import { __extends, __decorate, __metadata } from 'tslib';
import React__default from 'react';
import { isMobile, Overlay, PopOver, autobind } from 'amis-core';
import PopUp from './PopUp.js';
import { findDOMNode } from 'react-dom';

var PopOverContainer = /** @class */ (function (_super) {
    __extends(PopOverContainer, _super);
    function PopOverContainer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isOpened: false
        };
        return _this;
    }
    PopOverContainer.prototype.targetRef = function (target) {
        this.target = target ? findDOMNode(target) : null;
    };
    PopOverContainer.prototype.handleClick = function () {
        this.setState({
            isOpened: true
        });
    };
    PopOverContainer.prototype.close = function () {
        var _a = this.props, onBeforeHide = _a.onBeforeHide, onAfterHide = _a.onAfterHide;
        if (onBeforeHide && typeof onBeforeHide === 'function') {
            onBeforeHide === null || onBeforeHide === void 0 ? void 0 : onBeforeHide();
        }
        this.setState({
            isOpened: false
        });
        if (onAfterHide && typeof onAfterHide === 'function') {
            onAfterHide === null || onAfterHide === void 0 ? void 0 : onAfterHide();
        }
    };
    PopOverContainer.prototype.getTarget = function () {
        return this.target || findDOMNode(this);
    };
    PopOverContainer.prototype.getParent = function () {
        var _a;
        return (_a = this.getTarget()) === null || _a === void 0 ? void 0 : _a.parentElement;
    };
    PopOverContainer.prototype.render = function () {
        var _a = this.props, useMobileUI = _a.useMobileUI, children = _a.children, popOverContainer = _a.popOverContainer, popOverClassName = _a.popOverClassName, dropdownRender = _a.popOverRender, placement = _a.placement;
        var mobileUI = useMobileUI && isMobile();
        return (React__default.createElement(React__default.Fragment, null,
            children({
                isOpened: this.state.isOpened,
                onClick: this.handleClick,
                ref: this.targetRef
            }),
            mobileUI ? (React__default.createElement(PopUp, { isShow: this.state.isOpened, container: popOverContainer, className: popOverClassName, onHide: this.close }, dropdownRender({ onClose: this.close }))) : (React__default.createElement(Overlay, { container: popOverContainer || this.getParent, target: this.getTarget, placement: placement || 'auto', show: this.state.isOpened },
                React__default.createElement(PopOver, { overlay: true, className: popOverClassName, style: {
                        minWidth: this.target
                            ? Math.max(this.target.offsetWidth, 100)
                            : 'auto'
                    }, onHide: this.close }, dropdownRender({ onClose: this.close }))))));
    };
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "targetRef", null);
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "handleClick", null);
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "close", null);
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "getTarget", null);
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PopOverContainer.prototype, "getParent", null);
    return PopOverContainer;
}(React__default.Component));

export { PopOverContainer, PopOverContainer as default };
